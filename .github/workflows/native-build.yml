name: Native Image Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

permissions:
  contents: read
  checks: write
  actions: read

jobs:
  native-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact-name: sbe-codec-linux
            executable-suffix: ""
          - os: macos-latest
            artifact-name: sbe-codec-macos
            executable-suffix: ""
          - os: windows-latest
            artifact-name: sbe-codec-windows
            executable-suffix: ".exe"
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Make mvnw executable
      run: chmod +x mvnw
    
    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm-community'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: ./mvnw clean compile test
    
    - name: Build native image
      run: ./mvnw package -Pnative -DskipTests
    
    - name: Upload native executable
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: target/sbe-encoder-decoder${{ matrix.executable-suffix }}
        retention-days: 30
    
    - name: Release binaries
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: target/sbe-encoder-decoder${{ matrix.executable-suffix }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
